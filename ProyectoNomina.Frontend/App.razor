@inject HttpClient Http
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToLogin />
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Página no encontrada.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var existe = await Http.GetFromJsonAsync<bool>("api/usuarios/existe-usuario");

            // Solo redirigir si NO está ya en /registrar-usuario
            if (!existe && !Navigation.Uri.EndsWith("/registrar-usuario"))
            {
                Navigation.NavigateTo("/registrar-usuario", forceLoad: true);
            }
        }
        catch
        {
            // Error silencioso (API caída, etc.)
        }
    }
}

}
