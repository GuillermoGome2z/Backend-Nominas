@page "/agregar-informacion-academica/{empleadoId:int}"
@using ProyectoNomina.Shared.Models.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 class="text-center my-4">📚 Agregar Información Académica</h3>

<EditForm Model="nuevaInfo" OnValidSubmit="GuardarInformacion">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="titulo">Título o Certificación:</label>
        <InputText id="titulo" class="form-control" @bind-Value="nuevaInfo.Titulo" />
    </div>

    <div class="form-group mb-3">
        <label for="institucion">Institución:</label>
        <InputText id="institucion" class="form-control" @bind-Value="nuevaInfo.Institucion" />
    </div>

    <div class="form-group mb-3">
        <label for="fecha">Fecha de Graduación:</label>
        <InputDate id="fecha" class="form-control" @bind-Value="nuevaInfo.FechaGraduacion" />
    </div>

    <div class="text-center">
        <button type="submit" class="btn btn-success me-2">💾 Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Volver">↩️ Cancelar</button>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert @mensajeCssClass mt-3">@mensaje</div>
}

@code {
    [Parameter] public int empleadoId { get; set; }

    private InformacionAcademicaDto nuevaInfo = new();
    private string? mensaje;
    private string mensajeCssClass = "alert-info";

    protected override void OnInitialized()
    {
        nuevaInfo.EmpleadoId = empleadoId;
        nuevaInfo.FechaGraduacion = DateTime.Today;
    }

    private async Task GuardarInformacion()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/InformacionAcademica", nuevaInfo);

            if (response.IsSuccessStatusCode)
            {
                mensaje = "✅ Información académica guardada correctamente.";
                mensajeCssClass = "alert-success";
                nuevaInfo = new InformacionAcademicaDto { EmpleadoId = empleadoId, FechaGraduacion = DateTime.Today };
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                mensaje = $"❌ Error: {error}";
                mensajeCssClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"⚠️ Error inesperado: {ex.Message}";
            mensajeCssClass = "alert-danger";
        }
    }

    private void Volver()
    {
        Navigation.NavigateTo("/empleados");
    }
}
