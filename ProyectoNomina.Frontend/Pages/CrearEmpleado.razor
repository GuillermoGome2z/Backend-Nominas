@page "/crear-empleado"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager Navigation
@using ProyectoNomina.Shared.Models.DTOs
@using System.Net.Http.Json

<div class="container mt-5">
    <div class="card shadow rounded">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">🧑‍💼 Crear Nuevo Empleado</h3>
        </div>
        <div class="card-body">
            <EditForm Model="nuevoEmpleado" OnValidSubmit="CrearEmpleadoAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group mb-3">
                    <label for="nombre" class="form-label">Nombre Completo:</label>
                    <InputText id="nombre" @bind-Value="nuevoEmpleado.NombreCompleto" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="correo" class="form-label">Correo:</label>
                    <InputText id="correo" @bind-Value="nuevoEmpleado.Correo" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="telefono" class="form-label">Teléfono:</label>
                    <InputText id="telefono" @bind-Value="nuevoEmpleado.Telefono" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="direccion" class="form-label">Dirección:</label>
                    <InputText id="direccion" @bind-Value="nuevoEmpleado.Direccion" class="form-control" />
                </div>


                <div class="form-group mb-3">
                    <label for="salario" class="form-label">Salario Base:</label>
                    <InputNumber id="salario" @bind-Value="nuevoEmpleado.SalarioBase" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="fecha" class="form-label">Fecha de Contratación:</label>
                    <InputDate id="fecha" @bind-Value="nuevoEmpleado.FechaContratacion" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="departamentoId" class="form-label">Departamento ID:</label>
                    <InputNumber id="departamentoId" @bind-Value="nuevoEmpleado.DepartamentoId" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="nit" class="form-label">NIT:</label>
                    <InputText id="nit" @bind-Value="nuevoEmpleado.NIT" class="form-control" />
                    <ValidationMessage For="@(() => nuevoEmpleado.NIT)" />
                </div>

                <div class="form-group mb-3">
                    <label for="dpi" class="form-label">DPI:</label>
                    <InputText id="dpi" @bind-Value="nuevoEmpleado.DPI" class="form-control" />
                    <ValidationMessage For="@(() => nuevoEmpleado.DPI)" />
                </div>

                <div class="form-group mb-3">
                    <label for="puestoId" class="form-label">Puesto ID:</label>
                    <InputNumber id="puestoId" @bind-Value="nuevoEmpleado.PuestoId" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="fechaNacimiento" class="form-label">Fecha de Nacimiento:</label>
                    <InputDate id="fechaNacimiento" @bind-Value="nuevoEmpleado.FechaNacimiento" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="estado" class="form-label">Estado Laboral:</label>
                    <InputSelect id="estado" class="form-control" @bind-Value="nuevoEmpleado.EstadoLaboral">
                        <option value="Activo">Activo</option>
                        <option value="Suspendido">Suspendido</option>
                        <option value="Retirado">Retirado</option>
                    </InputSelect>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-success me-2">💾 Guardar</button>
                    <button type="button" class="btn btn-secondary" @onclick="Volver">↩️ Volver</button>
                </div>

               

            </EditForm>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert @mensajeCssClass mt-4">@mensaje</div>
            }
        </div>
    </div>
</div>

@code {
    private EmpleadoCreacionDto nuevoEmpleado = new();
    private string? mensaje;
    private string mensajeCssClass = "alert-info";

    private async Task CrearEmpleadoAsync()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Empleados", nuevoEmpleado);

            if (response.IsSuccessStatusCode)
            {
                mensaje = "✅ Empleado creado con éxito.";
                mensajeCssClass = "alert-success";
                nuevoEmpleado = new(); // Limpiar formulario
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                mensaje = $"❌ Error al crear empleado: {error}";
                mensajeCssClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"⚠️ Error inesperado: {ex.Message}";
            mensajeCssClass = "alert-danger";
        }
    }

    private void Volver()
    {
        Navigation.NavigateTo("/");
    }
}
