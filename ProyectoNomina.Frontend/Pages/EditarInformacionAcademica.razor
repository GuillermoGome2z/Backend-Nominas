@page "/editar-informacion-academica/{id:int}"
@using ProyectoNomina.Shared.Models.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 class="text-center my-4">✏️ Editar Información Académica</h3>

@if (informacion == null)
{
    <p>Cargando información académica...</p>
}
else
{
    <EditForm Model="informacion" OnValidSubmit="GuardarCambios">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="titulo">Título:</label>
            <InputText id="titulo" class="form-control" @bind-Value="informacion.Titulo" />
        </div>

        <div class="form-group mb-3">
            <label for="institucion">Institución:</label>
            <InputText id="institucion" class="form-control" @bind-Value="informacion.Institucion" />
        </div>

        <div class="form-group mb-3">
            <label for="fecha">Fecha de Graduación:</label>
            <InputDate id="fecha" class="form-control" @bind-Value="informacion.FechaGraduacion" />
        </div>

        <div class="text-center">
            <button class="btn btn-success me-2" type="submit">💾 Guardar Cambios</button>
            <button class="btn btn-secondary" type="button" @onclick="Volver">🔙 Volver</button>
        </div>

        @if (!string.IsNullOrEmpty(mensaje))
        {
            <div class="alert alert-success mt-3">✅ @mensaje</div>
        }
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }

    private InformacionAcademicaDto? informacion;
    private string? mensaje;
    private int empleadoId;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            informacion = await Http.GetFromJsonAsync<InformacionAcademicaDto>($"api/InformacionAcademica/{id}");

            if (informacion is not null)
                empleadoId = informacion.EmpleadoId;
        }
        catch (Exception ex)
        {
            mensaje = $"❌ Error al cargar la información: {ex.Message}";
        }
    }

    private async Task GuardarCambios()
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"api/InformacionAcademica/{id}", informacion);

            if (response.IsSuccessStatusCode)
            {
                mensaje = "Cambios guardados exitosamente.";
            }
            else
            {
                mensaje = "❌ Error al guardar los cambios.";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"⚠️ Error inesperado: {ex.Message}";
        }
    }

    private void Volver()
    {
        Navigation.NavigateTo($"/lista-informacion-academica/{empleadoId}");
    }
}
