@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@page "/"
<PageTitle>Inicio - Sistema de Nóminas</PageTitle>

<div class="hero-section">
    <div class="hero-content">
        <div class="hero-text">
            <h1 class="hero-title">
                <span class="title-main">Bienvenido al</span>
                <span class="title-accent">Sistema de Nóminas</span>
                <span class="title-main">"Escuadrón suicida"</span>
            </h1>
            <p class="hero-description">
                Gestiona eficientemente los empleados y nóminas de tu empresa con nuestra plataforma moderna e intuitiva.
            </p>
            <div class="hero-buttons">
                <a href="/crear-empleado" class="btn btn-primary">
                    <span class="btn-icon">➕</span>
                    Crear Empleado
                </a>

                <a href="/lista-documentos" class="btn btn-primary">
                    <span class="btn-icon">📁</span>
                    Ver Documentos
                </a>

                <a href="/reportes" class="btn btn-primary">
                    <span class="btn-icon">📊</span>
                    Ver Informes
                </a>

                <a href="/departamentos" class="btn btn-primary">
                    <span class="btn-icon">🏢</span>
                    Departamentos
                </a>

                <a href="/roles" class="btn btn-primary">
                    <span class="btn-icon">🔐</span>
                    Roles
                </a>

                <a href="/puestos" class="btn btn-primary">
                    <span class="btn-icon">💼</span>
                    Puestos
                </a>

            </div>
        </div>

        <div class="hero-visual">
            <div class="logo-container">
                <img src="imagenes/logotipoumg.png" alt="Logo UMG" class="company-logo" />
                <div class="logo-glow"></div>
            </div>
            <div class="floating-elements">
                <div class="float-element element-1">💼</div>
                <div class="float-element element-2">📋</div>
                <div class="float-element element-3">💰</div>
                <div class="float-element element-4">📈</div>
            </div>
        </div>
    </div>
</div>

<div class="feature-card" @onclick="IrAListaEmpleados" style="cursor: pointer;">
    <div class="feature-icon">👥</div>
    <h3>Gestión de Empleados</h3>
    <p>Administra la información completa de tus empleados de manera sencilla y organizada.</p>
</div>

<div class="feature-card" style="cursor: pointer;" @onclick="IrAProcesarNomina">
    <div class="feature-icon">💳</div>
    <h3>Cálculo de Nóminas</h3>
    <p>Automatiza el cálculo de salarios, deducciones y bonificaciones con precisión.</p>
</div>

<div class="feature-card" style="cursor: pointer;" @onclick="IrAReportes">
    <div class="feature-icon">📈</div>
    <h3>Informes detallados</h3>
    <p>Genera informes completos para análisis financiero y toma de decisiones.</p>
</div>

<div class="feature-card">
    <div class="feature-icon">🔒</div>
    <h3>Seguridad Total</h3>
    <p>Protección avanzada de datos sensibles con los más altos estándares de seguridad.</p>
</div>

<div class="stats-section">
    <div class="stats-container">
        <div class="stat-item">
            <div class="stat-number" data-target="150">0</div>
            <div class="stat-label">Empleados Registrados</div>
        </div>
        <div class="stat-item">
            <div class="stat-number" data-target="12">0</div>
            <div class="stat-label">Departamentos</div>
        </div>
        <div class="stat-item">
            <div class="stat-number" data-target="98">0</div>
            <div class="stat-label">% Satisfacción</div>
        </div>
        <div class="stat-item">
            <div class="stat-number" data-target="24">0</div>
            <div class="stat-label">Meses Activo</div>
        </div>
    </div>
</div>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; }

    private void IrAListaEmpleados()
    {
        NavigationManager.NavigateTo("/empleados");
    }

    private void IrAReportes()
    {
        NavigationManager.NavigateTo("/reportes");
    }

    private void IrAProcesarNomina()
    {
        NavigationManager.NavigateTo("/procesar-nomina");
    }
}


<style>
    .hero-section {
        padding: 4rem 0;
        background: linear-gradient(135deg, rgba(255,107,107,0.1) 0%, rgba(78,205,196,0.1) 100%);
        border-radius: 20px;
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,107,107,0.05) 0%, transparent 50%);
            animation: rotate 20s linear infinite;
        }

    @@keyframes rotate {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    .hero-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 3rem;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        margin-bottom: 1.5rem;
        line-height: 1.1;
    }

    .title-main {
        display: block;
        color: #333;
        opacity: 0.8;
    }

    .title-accent {
        display: block;
        background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: gradient-text 3s ease infinite;
    }

    @@keyframes gradient-text {
        0%, 100% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }
    }

    .hero-description {
        font-size: 1.25rem;
        color: #666;
        margin-bottom: 2rem;
        line-height: 1.6;
    }

    .hero-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem 2rem;
        border: none;
        border-radius: 50px;
        font-size: 1.1rem;
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.6s;
        }

        .btn:hover::before {
            left: 100%;
        }

    .btn-primary {
        background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
        color: white;
        box-shadow: 0 8px 25px rgba(255,107,107,0.3);
    }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(255,107,107,0.4);
        }

    .btn-secondary {
        background: rgba(255,255,255,0.9);
        color: #333;
        border: 2px solid #ddd;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }

        .btn-secondary:hover {
            background: white;
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }

    .btn-icon {
        font-size: 1.2rem;
        filter: drop-shadow(0 2px 4px rgba(0,0,0,0.2));
    }

    .hero-visual {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        height: 400px;
    }

    .logo-container {
        position: relative;
        z-index: 2;
    }

    .company-logo {
        max-width: 300px;
        height: auto;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.2);
        transition: transform 0.3s ease;
        animation: logoFloat 6s ease-in-out infinite;
    }

    @@keyframes logoFloat {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(2deg);
        }
    }

    .logo-glow {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 350px;
        height: 350px;
        background: radial-gradient(circle, rgba(255,107,107,0.2) 0%, transparent 70%);
        border-radius: 50%;
        animation: glow 4s ease-in-out infinite alternate;
    }

    @@keyframes glow {
        from {
            opacity: 0.5;
            transform: translate(-50%, -50%) scale(1);
        }

        to {
            opacity: 0.8;
            transform: translate(-50%, -50%) scale(1.1);
        }
    }

    .floating-elements {
        position: absolute;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .float-element {
        position: absolute;
        font-size: 2rem;
        opacity: 0.6;
        animation: float 8s ease-in-out infinite;
    }

    .element-1 {
        top: 20%;
        left: 10%;
        animation-delay: 0s;
    }

    .element-2 {
        top: 60%;
        right: 15%;
        animation-delay: 2s;
    }

    .element-3 {
        bottom: 30%;
        left: 20%;
        animation-delay: 4s;
    }

    .element-4 {
        top: 40%;
        right: 5%;
        animation-delay: 6s;
    }

    .features-section {
        margin: 4rem 0;
    }

    .section-title {
        text-align: center;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 3rem;
        color: #333;
        position: relative;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border-radius: 2px;
        }

    .features-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 2rem;
    }

    .feature-card {
        background: white;
        padding: 2.5rem 1.5rem;
        border-radius: 20px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid rgba(255,255,255,0.2);
        position: relative;
        overflow: hidden;
    }

        .feature-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .feature-card:hover::before {
            transform: scaleX(1);
        }

        .feature-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 50px rgba(0,0,0,0.15);
        }

    .feature-icon {
        font-size: 3rem;
        margin-bottom: 1.5rem;
        filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
    }

    .feature-card h3 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: #333;
    }

    .feature-card p {
        color: #666;
        line-height: 1.6;
    }

    .stats-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        padding: 3rem 2rem;
        margin: 4rem 0;
        color: white;
        position: relative;
        overflow: hidden;
    }

        .stats-section::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -20%;
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            border-radius: 50%;
            animation: float 8s ease-in-out infinite;
        }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 2rem;
        position: relative;
        z-index: 2;
    }

    .stat-item {
        text-align: center;
    }

    .stat-number {
        font-size: 3rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
        background: linear-gradient(45deg, #fff, #f0f0f0);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .stat-label {
        font-size: 1.1rem;
        opacity: 0.9;
        font-weight: 500;
    }

    @@media (max-width: 768px) {
        .hero-content {
            grid-template-columns: 1fr;
            text-align: center;
            gap: 2rem;
        }

        .hero-title {
            font-size: 2.5rem;
        }

        .hero-visual {
            height: 300px;
        }

        .company-logo {
            max-width: 200px;
        }

        .features-grid {
            grid-template-columns: 1fr;
        }

        .stats-container {
            grid-template-columns: repeat(2, 1fr);
        }

        .btn {
            font-size: 1rem;
            padding: 0.8rem 1.5rem;
        }
    }
</style>

<script>
    // Animación de contador para las estadísticas
    document.addEventListener('DOMContentLoaded', function() {
        const counters = document.querySelectorAll('.stat-number');

        const animateCounter = (counter) => {
            const target = parseInt(counter.getAttribute('data-target'));
            const increment = target / 50;
            let current = 0;

            const updateCounter = () => {
                if (current < target) {
                    current += increment;
                    counter.textContent = Math.ceil(current);
                    requestAnimationFrame(updateCounter);
                } else {
                    counter.textContent = target;
                }
            };

            updateCounter();
        };

        // Intersection Observer para activar la animación cuando sea visible
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const counter = entry.target;
                    animateCounter(counter);
                    observer.unobserve(counter);
                }
            });
        });

        counters.forEach(counter => observer.observe(counter));
    });
</script>