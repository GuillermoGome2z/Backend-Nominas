@page "/asignacion-roles"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 class="text-2xl font-bold mb-4">🔐 Asignación de Roles</h3>
@if (mostrarExito)
{
    <div class="alert alert-success" role="alert">
        @mensajeExito
    </div>
}


<div class="mb-4">
    <button class="btn btn-outline-primary me-2" @onclick="VolverAtras">🔙 Regresar</button>
    <button class="btn btn-outline-dark" @onclick="IrAlHome">🏠 Home</button>
</div>

@if (usuarios == null)
{
    <p>Cargando usuarios...</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Correo</th>
                <th>Rol actual</th>
                <th>Cambiar rol</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in usuarios)
            {
                <tr>
                    <td>@usuario.NombreCompleto</td>
                    <td>@usuario.Correo</td>
                    <td>@usuario.Rol</td>
                    <td>
                        <select @bind="usuario.Rol" class="form-select">
                            <option value="Usuario">Usuario</option>
                            <option value="RRHH">RRHH</option>
                            <option value="Admin">Admin</option>
                        </select>
                        <button class="btn btn-sm btn-primary mt-1" @onclick="() => ActualizarRol(usuario)">Guardar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string mensajeExito = string.Empty;
    private bool mostrarExito = false;

    public class UsuarioDto
    {
        public int Id { get; set; }
        public string NombreCompleto { get; set; } = "";
        public string Correo { get; set; } = "";
        public string Rol { get; set; } = "";
    }

    private List<UsuarioDto>? usuarios;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await Http.GetFromJsonAsync<List<UsuarioDto>>("api/usuarios");
    }

    private async Task ActualizarRol(UsuarioDto usuario)
    {
        var dto = new { rol = usuario.Rol };
        var response = await Http.PutAsJsonAsync($"api/usuarios/{usuario.Id}/actualizar-rol", dto);

        if (response.IsSuccessStatusCode)
        {
            mensajeExito = $"✅ Rol actualizado correctamente para {usuario.Correo}.";
            mostrarExito = true;

            await Task.Delay(5000);
            mostrarExito = false;
            StateHasChanged();
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            mensajeExito = $"❌ Error al actualizar rol: {error}";
            mostrarExito = true;

            await Task.Delay(5000);
            mostrarExito = false;
            StateHasChanged();
        }
    }


    private void VolverAtras()
    {
        Navigation.NavigateTo(Navigation.Uri, forceLoad: false);
    }

    private void IrAlHome()
    {
        Navigation.NavigateTo("/");
    }
}
